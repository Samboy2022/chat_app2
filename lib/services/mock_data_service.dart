import '../models/user.dart';
import '../models/chat.dart';
import '../models/message.dart';
import '../models/status.dart';
import '../models/group.dart';

class MockDataService {
  static final MockDataService _instance = MockDataService._internal();
  factory MockDataService() => _instance;
  MockDataService._internal();

  // Mock Users
  static final List<User> _mockUsers = [
    User(
      id: '1',
      phoneNumber: '+1234567890',
      name: 'John Doe',
      profilePicture: null,
      about: 'Hey there! I am using ChatWave.',
      lastSeen: DateTime.now().subtract(const Duration(minutes: 5)),
      isOnline: true,
      isVerified: true,
    ),
    User(
      id: '2',
      phoneNumber: '+1987654321',
      name: 'Jane Smith',
      profilePicture: null,
      about: 'Available',
      lastSeen: DateTime.now().subtract(const Duration(minutes: 2)),
      isOnline: true,
      isVerified: false,
    ),
    User(
      id: '3',
      phoneNumber: '+1122334455',
      name: 'Mike Johnson',
      profilePicture: null,
      about: 'In a meeting',
      lastSeen: DateTime.now().subtract(const Duration(hours: 1)),
      isOnline: false,
      isVerified: true,
    ),
    User(
      id: '4',
      phoneNumber: '+1555666777',
      name: 'Sarah Wilson',
      profilePicture: null,
      about: 'Busy',
      lastSeen: DateTime.now().subtract(const Duration(minutes: 30)),
      isOnline: false,
      isVerified: false,
    ),
    User(
      id: '5',
      phoneNumber: '+1888999000',
      name: 'David Brown',
      profilePicture: null,
      about: 'At the gym',
      lastSeen: DateTime.now().subtract(const Duration(hours: 2)),
      isOnline: false,
      isVerified: true,
    ),
  ];

  // Mock Status updates
  static final List<Status> _mockStatuses = [
    Status(
      id: 's1',
      author: _mockUsers[1],
      mediaUrl: 'https://picsum.photos/seed/1/600/900',
      type: StatusType.image,
      caption: 'Sunset vibes üåÖ',
      createdAt: DateTime.now().subtract(const Duration(minutes: 45)),
      expiresAt: DateTime.now().add(const Duration(hours: 23, minutes: 15)),
      viewed: false,
    ),
    Status(
      id: 's2',
      author: _mockUsers[2],
      mediaUrl: 'https://picsum.photos/seed/2/600/900',
      type: StatusType.image,
      caption: 'At the beach üèñÔ∏è',
      createdAt: DateTime.now().subtract(const Duration(hours: 2)),
      expiresAt: DateTime.now().add(const Duration(hours: 22)),
      viewed: true,
    ),
    Status(
      id: 's3',
      author: _mockUsers[3],
      mediaUrl: 'https://picsum.photos/seed/3/600/900',
      type: StatusType.image,
      caption: 'Morning run üèÉ‚Äç‚ôÇÔ∏è',
      createdAt: DateTime.now().subtract(const Duration(hours: 5)),
      expiresAt: DateTime.now().add(const Duration(hours: 19)),
      viewed: false,
    ),
    Status(
      id: 's4',
      author: _mockUsers[4],
      mediaUrl: 'https://picsum.photos/seed/4/600/900',
      type: StatusType.image,
      caption: 'Gym session üí™',
      createdAt: DateTime.now().subtract(const Duration(hours: 1)),
      expiresAt: DateTime.now().add(const Duration(hours: 23)),
      viewed: false,
    ),
    Status(
      id: 's5',
      author: _mockUsers[0], // Current user
      mediaUrl: 'https://picsum.photos/seed/5/600/900',
      type: StatusType.image,
      caption: 'Working from home üè†',
      createdAt: DateTime.now().subtract(const Duration(minutes: 30)),
      expiresAt: DateTime.now().add(const Duration(hours: 23, minutes: 30)),
      viewed: true,
    ),
    Status(
      id: 's6',
      author: _mockUsers[1],
      mediaUrl: 'https://picsum.photos/seed/6/600/900',
      type: StatusType.image,
      caption: 'Coffee time ‚òï',
      createdAt: DateTime.now().subtract(const Duration(minutes: 15)),
      expiresAt: DateTime.now().add(const Duration(hours: 23, minutes: 45)),
      viewed: false,
    ),
  ];

  // Mock Chats
  static final List<Chat> _mockChats = [
    Chat(
      id: '1',
      name: 'John Doe',
      groupPicture: null,
      participants: [_mockUsers[0], _mockUsers[1]],
      lastMessage: Message(
        id: '1',
        chatId: '1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Hey, how are you?',
        timestamp: DateTime.now().subtract(const Duration(minutes: 5)),
        status: MessageStatus.read,
      ),
      unreadCount: 0,
      lastActivity: DateTime.now().subtract(const Duration(minutes: 5)),
      isGroup: false,
      isPinned: false,
      createdAt: DateTime.now().subtract(const Duration(days: 7)),
    ),
    Chat(
      id: '2',
      name: 'Jane Smith',
      groupPicture: null,
      participants: [_mockUsers[1], _mockUsers[2]],
      lastMessage: Message(
        id: '2',
        chatId: '2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'See you tomorrow!',
        timestamp: DateTime.now().subtract(const Duration(minutes: 15)),
        status: MessageStatus.delivered,
      ),
      unreadCount: 1,
      lastActivity: DateTime.now().subtract(const Duration(minutes: 15)),
      isGroup: false,
      isPinned: true,
      createdAt: DateTime.now().subtract(const Duration(days: 14)),
    ),
    Chat(
      id: '3',
      name: 'Mike Johnson',
      groupPicture: null,
      participants: [_mockUsers[2], _mockUsers[3]],
      lastMessage: Message(
        id: '3',
        chatId: '3',
        sender: _mockUsers[2],
        type: MessageType.image,
        content: 'Check this out!',
        mediaUrl: 'https://picsum.photos/200/300',
        timestamp: DateTime.now().subtract(const Duration(hours: 1)),
        status: MessageStatus.read,
      ),
      unreadCount: 0,
      lastActivity: DateTime.now().subtract(const Duration(hours: 1)),
      isGroup: false,
      isPinned: false,
      createdAt: DateTime.now().subtract(const Duration(days: 21)),
    ),
    Chat(
      id: '4',
      name: 'Project Team',
      groupPicture: null,
      participants: _mockUsers,
      lastMessage: Message(
        id: '4',
        chatId: '4',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Meeting at 3 PM today',
        timestamp: DateTime.now().subtract(const Duration(hours: 2)),
        status: MessageStatus.read,
      ),
      unreadCount: 3,
      lastActivity: DateTime.now().subtract(const Duration(hours: 2)),
      isGroup: true,
      isPinned: true,
      createdAt: DateTime.now().subtract(const Duration(days: 30)),
    ),
  ];

  // Mock Messages for each chat
  static final Map<String, List<Message>> _mockMessages = {
    '1': [
      Message(
        id: 'msg_1_1',
        chatId: '1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Hey! Long time no see! üòä',
        timestamp: DateTime.now().subtract(const Duration(days: 1, hours: 2)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_2',
        chatId: '1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Hi John! Yeah, it\'s been a while. How have you been?',
        timestamp: DateTime.now().subtract(const Duration(days: 1, hours: 1, minutes: 55)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_3',
        chatId: '1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'I\'ve been great! Just got back from a business trip to Singapore. The food there is amazing! üçú',
        timestamp: DateTime.now().subtract(const Duration(days: 1, hours: 1, minutes: 45)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_4',
        chatId: '1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Wow, Singapore sounds incredible! I\'ve always wanted to visit. What did you do there?',
        timestamp: DateTime.now().subtract(const Duration(days: 1, hours: 1, minutes: 35)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_5',
        chatId: '1',
        sender: _mockUsers[1],
        type: MessageType.image,
        content: 'Check out this view from Marina Bay Sands! üèôÔ∏è',
        mediaUrl: 'https://picsum.photos/seed/singapore/300/400',
        timestamp: DateTime.now().subtract(const Duration(days: 1, hours: 1, minutes: 30)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_6',
        chatId: '1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Stunning! That skyline is breathtaking. Did you try any local food?',
        timestamp: DateTime.now().subtract(const Duration(days: 1, hours: 1, minutes: 25)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_7',
        chatId: '1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Absolutely! The chili crab was incredible. I need to take you there sometime! üå∂Ô∏èü¶Ä',
        timestamp: DateTime.now().subtract(const Duration(days: 1, hours: 1, minutes: 20)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_8',
        chatId: '1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'That sounds amazing! I\'d love to go. Are you free this weekend for coffee?',
        timestamp: DateTime.now().subtract(const Duration(hours: 8)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_9',
        chatId: '1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'This weekend works! How about Saturday morning at the usual place?',
        timestamp: DateTime.now().subtract(const Duration(hours: 7, minutes: 45)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_10',
        chatId: '1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Perfect! See you Saturday at 10 AM. Can\'t wait to hear more about your trip!',
        timestamp: DateTime.now().subtract(const Duration(hours: 7, minutes: 30)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_11',
        chatId: '1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Great! I\'ll bring some photos to show you. See you then! üì∏',
        timestamp: DateTime.now().subtract(const Duration(hours: 7, minutes: 15)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_12',
        chatId: '1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Hey, how are you?',
        timestamp: DateTime.now().subtract(const Duration(minutes: 5)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_13',
        chatId: '1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'I\'m good, thanks! How about you?',
        timestamp: DateTime.now().subtract(const Duration(minutes: 4)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_1_14',
        chatId: '1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Doing great! Want to grab coffee later?',
        timestamp: DateTime.now().subtract(const Duration(minutes: 3)),
        status: MessageStatus.read,
      ),
    ],
    '2': [
      Message(
        id: 'msg_2_1',
        chatId: '2',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Good morning! ‚òÄÔ∏è',
        timestamp: DateTime.now().subtract(const Duration(hours: 5)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_2',
        chatId: '2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Morning Jane! Ready for the big presentation today?',
        timestamp: DateTime.now().subtract(const Duration(hours: 4, minutes: 55)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_3',
        chatId: '2',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'As ready as I\'ll ever be! I stayed up late practicing. ü§û',
        timestamp: DateTime.now().subtract(const Duration(hours: 4, minutes: 50)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_4',
        chatId: '2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'You\'ll do great! Just remember to breathe and speak slowly.',
        timestamp: DateTime.now().subtract(const Duration(hours: 4, minutes: 45)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_5',
        chatId: '2',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Thanks for the advice! Did you see the email from HR about the new benefits?',
        timestamp: DateTime.now().subtract(const Duration(hours: 3)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_6',
        chatId: '2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Yes! The new health insurance looks really good. Higher coverage for less premium.',
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 50)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_7',
        chatId: '2',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Definitely! I\'m thinking of switching to it. What about the gym membership discount?',
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 30)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_8',
        chatId: '2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'That\'s awesome too! They partnered with Fitness First. I might join.',
        timestamp: DateTime.now().subtract(const Duration(hours: 2)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_9',
        chatId: '2',
        sender: _mockUsers[2],
        type: MessageType.image,
        content: 'Check out this sunset from my balcony! üåÖ',
        mediaUrl: 'https://picsum.photos/seed/sunset/300/400',
        timestamp: DateTime.now().subtract(const Duration(hours: 1)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_10',
        chatId: '2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Beautiful! You have such a great view. Makes me want to go home early! üòÇ',
        timestamp: DateTime.now().subtract(const Duration(minutes: 55)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_11',
        chatId: '2',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Haha, it really is perfect for unwinding. You should come over sometime!',
        timestamp: DateTime.now().subtract(const Duration(minutes: 50)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_12',
        chatId: '2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'I\'d love to! Maybe next weekend?',
        timestamp: DateTime.now().subtract(const Duration(minutes: 45)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_13',
        chatId: '2',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Perfect! Let\'s plan for Saturday evening. I\'ll cook dinner. üçù',
        timestamp: DateTime.now().subtract(const Duration(minutes: 40)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_14',
        chatId: '2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Sounds amazing! What time should I come over?',
        timestamp: DateTime.now().subtract(const Duration(minutes: 35)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_15',
        chatId: '2',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Come around 7 PM. Don\'t forget to bring dessert! üòâ',
        timestamp: DateTime.now().subtract(const Duration(minutes: 30)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_16',
        chatId: '2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Deal! I\'ll bring your favorite chocolate cake. üéÇ',
        timestamp: DateTime.now().subtract(const Duration(minutes: 25)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_17',
        chatId: '2',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'You know me so well! üòç',
        timestamp: DateTime.now().subtract(const Duration(minutes: 20)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_2_18',
        chatId: '2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'See you tomorrow!',
        timestamp: DateTime.now().subtract(const Duration(minutes: 15)),
        status: MessageStatus.delivered,
      ),
      Message(
        id: 'msg_2_19',
        chatId: '2',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Looking forward to it! üíï',
        timestamp: DateTime.now().subtract(const Duration(minutes: 14)),
        status: MessageStatus.read,
      ),
    ],
    '3': [
      Message(
        id: 'msg_3_1',
        chatId: '3',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Hey Mike! Are you free to talk?',
        timestamp: DateTime.now().subtract(const Duration(hours: 3)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_2',
        chatId: '3',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Hi Sarah! Sure, what\'s up?',
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 55)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_3',
        chatId: '3',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'I wanted to ask about the new project timeline. Is it still on track?',
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 50)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_4',
        chatId: '3',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Yes, we\'re still on schedule. The client approved the wireframes yesterday.',
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 45)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_5',
        chatId: '3',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Great! That\'s a relief. I was worried about the tight deadline.',
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 40)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_6',
        chatId: '3',
        sender: _mockUsers[2],
        type: MessageType.image,
        content: 'Check this out! I finished the new design for the landing page.',
        mediaUrl: 'https://picsum.photos/seed/design/400/300',
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 30)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_7',
        chatId: '3',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Wow, that looks amazing! The color scheme is perfect. Love the typography too!',
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 25)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_8',
        chatId: '3',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Thanks! I spent extra time on the mobile responsiveness. Should work great on all devices.',
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 20)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_9',
        chatId: '3',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'I can tell. The layout looks clean and professional. Client will love it!',
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 15)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_10',
        chatId: '3',
        sender: _mockUsers[2],
        type: MessageType.file,
        content: 'Here\'s the full design file if you want to take a closer look.',
        mediaUrl: 'https://picsum.photos/seed/file/200/200',
        fileName: 'landing_page_design.fig',
        fileSize: 5242880, // 5MB
        timestamp: DateTime.now().subtract(const Duration(hours: 2, minutes: 10)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_11',
        chatId: '3',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Downloaded! I\'ll review it tonight. Also, did you see the latest analytics?',
        timestamp: DateTime.now().subtract(const Duration(hours: 2)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_12',
        chatId: '3',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Yes! Traffic is up 15% this month. The SEO changes are working well.',
        timestamp: DateTime.now().subtract(const Duration(hours: 1, minutes: 50)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_13',
        chatId: '3',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'That\'s excellent! Should we schedule a meeting to discuss the next phase?',
        timestamp: DateTime.now().subtract(const Duration(hours: 1, minutes: 45)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_14',
        chatId: '3',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Definitely. How about tomorrow at 2 PM? I can share my screen and walk through the analytics.',
        timestamp: DateTime.now().subtract(const Duration(hours: 1, minutes: 40)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_15',
        chatId: '3',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Perfect! I\'ll block out the time. Looking forward to it.',
        timestamp: DateTime.now().subtract(const Duration(hours: 1, minutes: 30)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_16',
        chatId: '3',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Me too! Have a great rest of your day. üåü',
        timestamp: DateTime.now().subtract(const Duration(hours: 1, minutes: 25)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_3_17',
        chatId: '3',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Thanks! You too! üëã',
        timestamp: DateTime.now().subtract(const Duration(hours: 1, minutes: 20)),
        status: MessageStatus.read,
      ),
    ],
    '4': [
      Message(
        id: 'msg_4_1',
        chatId: '4',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Good morning team! ‚òÄÔ∏è',
        timestamp: DateTime.now().subtract(const Duration(hours: 6)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_2',
        chatId: '4',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Morning! Ready for today\'s standup?',
        timestamp: DateTime.now().subtract(const Duration(hours: 5, minutes: 55)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_3',
        chatId: '4',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Good morning everyone! I\'ll be joining remotely today.',
        timestamp: DateTime.now().subtract(const Duration(hours: 5, minutes: 50)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_4',
        chatId: '4',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Morning! Coffee first, then standup. ‚òï',
        timestamp: DateTime.now().subtract(const Duration(hours: 5, minutes: 45)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_5',
        chatId: '4',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Meeting at 3 PM today',
        timestamp: DateTime.now().subtract(const Duration(hours: 2)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_6',
        chatId: '4',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Got it! I\'ll be there.',
        timestamp: DateTime.now().subtract(const Duration(hours: 1, minutes: 55)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_7',
        chatId: '4',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'I might be a bit late, traffic is bad.',
        timestamp: DateTime.now().subtract(const Duration(hours: 1, minutes: 30)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_8',
        chatId: '4',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Should be on time. See you all there! üëç',
        timestamp: DateTime.now().subtract(const Duration(hours: 1, minutes: 25)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_9',
        chatId: '4',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Team, I\'ve uploaded the latest project files to the shared drive.',
        timestamp: DateTime.now().subtract(const Duration(minutes: 45)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_10',
        chatId: '4',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Thanks! I\'ll download them before the meeting.',
        timestamp: DateTime.now().subtract(const Duration(minutes: 40)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_11',
        chatId: '4',
        sender: _mockUsers[2],
        type: MessageType.file,
        content: 'Here\'s the updated requirements document.',
        mediaUrl: 'https://picsum.photos/seed/doc/200/200',
        fileName: 'project_requirements_v2.pdf',
        fileSize: 2097152, // 2MB
        timestamp: DateTime.now().subtract(const Duration(minutes: 35)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_12',
        chatId: '4',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Thanks for the update! I\'ll review it tonight.',
        timestamp: DateTime.now().subtract(const Duration(minutes: 30)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_13',
        chatId: '4',
        sender: _mockUsers[0],
        type: MessageType.image,
        content: 'Quick team photo from yesterday\'s brainstorming session! üì∏',
        mediaUrl: 'https://picsum.photos/seed/team/400/300',
        timestamp: DateTime.now().subtract(const Duration(minutes: 25)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_14',
        chatId: '4',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Great session! We came up with some really good ideas.',
        timestamp: DateTime.now().subtract(const Duration(minutes: 20)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_4_15',
        chatId: '4',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Agreed! Looking forward to implementing them. üöÄ',
        timestamp: DateTime.now().subtract(const Duration(minutes: 15)),
        status: MessageStatus.read,
      ),
    ],
    'group1': [
      Message(
        id: 'msg_g1_1',
        chatId: 'group1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Welcome to our project team! üéâ',
        timestamp: DateTime.now().subtract(const Duration(days: 30)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_2',
        chatId: 'group1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Thanks for creating this group! Looking forward to working together.',
        timestamp: DateTime.now().subtract(const Duration(days: 30, hours: 1)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_3',
        chatId: 'group1',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Same here! This project has a lot of potential.',
        timestamp: DateTime.now().subtract(const Duration(days: 29, hours: 23)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_4',
        chatId: 'group1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Let\'s start by sharing our initial ideas. I\'ve attached the project brief.',
        timestamp: DateTime.now().subtract(const Duration(days: 29, hours: 18)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_5',
        chatId: 'group1',
        sender: _mockUsers[1],
        type: MessageType.file,
        content: 'Here are my initial wireframes for the mobile app.',
        mediaUrl: 'https://picsum.photos/seed/wireframe/400/300',
        fileName: 'mobile_wireframes.pdf',
        fileSize: 3145728, // 3MB
        timestamp: DateTime.now().subtract(const Duration(days: 28, hours: 14)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_6',
        chatId: 'group1',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Great work on the wireframes! The user flow looks intuitive.',
        timestamp: DateTime.now().subtract(const Duration(days: 28, hours: 12)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_7',
        chatId: 'group1',
        sender: _mockUsers[0],
        type: MessageType.image,
        content: 'Team meeting at the office today. Here\'s what we discussed.',
        mediaUrl: 'https://picsum.photos/seed/meeting/400/300',
        timestamp: DateTime.now().subtract(const Duration(days: 25, hours: 16)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_8',
        chatId: 'group1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Sorry I couldn\'t make it to the meeting. What did I miss?',
        timestamp: DateTime.now().subtract(const Duration(days: 25, hours: 10)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_9',
        chatId: 'group1',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'We finalized the color scheme and discussed the MVP features.',
        timestamp: DateTime.now().subtract(const Duration(days: 25, hours: 9)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_10',
        chatId: 'group1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'The client approved our proposal! üéä Let\'s celebrate!',
        timestamp: DateTime.now().subtract(const Duration(days: 20, hours: 11)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_11',
        chatId: 'group1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'That\'s amazing news! Well deserved team! ü•Ç',
        timestamp: DateTime.now().subtract(const Duration(days: 20, hours: 10)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_12',
        chatId: 'group1',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Congrats everyone! Now the real work begins. üí™',
        timestamp: DateTime.now().subtract(const Duration(days: 20, hours: 9)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_13',
        chatId: 'group1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Update: Development phase starts next week. I\'ve shared the sprint plan.',
        timestamp: DateTime.now().subtract(const Duration(days: 15, hours: 14)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_14',
        chatId: 'group1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Got it! I\'ll review the plan and let you know if I have any questions.',
        timestamp: DateTime.now().subtract(const Duration(days: 15, hours: 13)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_15',
        chatId: 'group1',
        sender: _mockUsers[2],
        type: MessageType.image,
        content: 'Here\'s the first prototype! What do you think?',
        mediaUrl: 'https://picsum.photos/seed/prototype/400/300',
        timestamp: DateTime.now().subtract(const Duration(days: 10, hours: 16)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_16',
        chatId: 'group1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Looking good! The navigation feels smooth. One small suggestion on the button placement.',
        timestamp: DateTime.now().subtract(const Duration(days: 10, hours: 15)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_17',
        chatId: 'group1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'I agree with the feedback. Let\'s iterate on that tomorrow.',
        timestamp: DateTime.now().subtract(const Duration(days: 10, hours: 14)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_18',
        chatId: 'group1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Weekly standup tomorrow at 10 AM. Please prepare your updates.',
        timestamp: DateTime.now().subtract(const Duration(days: 5, hours: 17)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_19',
        chatId: 'group1',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'I\'ll be presenting the latest UI changes. Looking forward to everyone\'s feedback!',
        timestamp: DateTime.now().subtract(const Duration(days: 5, hours: 16)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_20',
        chatId: 'group1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'I\'ve completed the backend integration for the user authentication module.',
        timestamp: DateTime.now().subtract(const Duration(days: 3, hours: 11)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_21',
        chatId: 'group1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Great progress! We\'re ahead of schedule. Keep up the excellent work team! üöÄ',
        timestamp: DateTime.now().subtract(const Duration(days: 3, hours: 10)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_22',
        chatId: 'group1',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'Thanks! The collaboration has been amazing. This is shaping up to be our best project yet.',
        timestamp: DateTime.now().subtract(const Duration(days: 3, hours: 9)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_23',
        chatId: 'group1',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Quick reminder: Client demo is next Tuesday. Let\'s make sure everything is polished.',
        timestamp: DateTime.now().subtract(const Duration(hours: 8)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_24',
        chatId: 'group1',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Roger that! I\'ll run through all the test cases this afternoon.',
        timestamp: DateTime.now().subtract(const Duration(hours: 7, minutes: 45)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g1_25',
        chatId: 'group1',
        sender: _mockUsers[2],
        type: MessageType.text,
        content: 'I\'ll prepare the demo script and make sure the presentation is ready.',
        timestamp: DateTime.now().subtract(const Duration(hours: 7, minutes: 30)),
        status: MessageStatus.read,
      ),
    ],
    'group2': [
      Message(
        id: 'msg_g2_1',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Family group created! üéä Let\'s stay connected.',
        timestamp: DateTime.now().subtract(const Duration(days: 60)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_2',
        chatId: 'group2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Finally! This will be so much better than texting everyone individually. üôå',
        timestamp: DateTime.now().subtract(const Duration(days: 60, hours: 1)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_3',
        chatId: 'group2',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Love this idea! How often should we share updates?',
        timestamp: DateTime.now().subtract(const Duration(days: 59, hours: 22)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_4',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Maybe once a week? Or whenever something important happens.',
        timestamp: DateTime.now().subtract(const Duration(days: 59, hours: 20)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_5',
        chatId: 'group2',
        sender: _mockUsers[1],
        type: MessageType.image,
        content: 'Baby\'s first photo! üë∂ Born yesterday at 3:45 PM. 7lbs 2oz. Both mom and baby are doing great! üíï',
        mediaUrl: 'https://picsum.photos/seed/baby/300/400',
        timestamp: DateTime.now().subtract(const Duration(days: 50, hours: 10)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_6',
        chatId: 'group2',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Congratulations! üéâ So happy for you both! What a beautiful baby! üòç',
        timestamp: DateTime.now().subtract(const Duration(days: 50, hours: 9)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_7',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Oh wow! Congratulations sis! So excited to meet the little one! ü•∞',
        timestamp: DateTime.now().subtract(const Duration(days: 50, hours: 8)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_8',
        chatId: 'group2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Thanks everyone! We named her Emma Rose. Can\'t wait for you all to meet her! üåπ',
        timestamp: DateTime.now().subtract(const Duration(days: 50, hours: 7)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_9',
        chatId: 'group2',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Emma Rose is such a beautiful name! Perfect for such a precious little girl.',
        timestamp: DateTime.now().subtract(const Duration(days: 50, hours: 6)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_10',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Family dinner this Sunday at mom\'s place? 6 PM sharp! üçΩÔ∏è',
        timestamp: DateTime.now().subtract(const Duration(days: 35, hours: 14)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_11',
        chatId: 'group2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'I\'ll be there! Should I bring anything?',
        timestamp: DateTime.now().subtract(const Duration(days: 35, hours: 13)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_12',
        chatId: 'group2',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Count me in! I\'ll bring dessert. üéÇ',
        timestamp: DateTime.now().subtract(const Duration(days: 35, hours: 12)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_13',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Perfect! Mom\'s making her famous lasagna. Can\'t wait! üòã',
        timestamp: DateTime.now().subtract(const Duration(days: 35, hours: 11)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_14',
        chatId: 'group2',
        sender: _mockUsers[1],
        type: MessageType.image,
        content: 'Emma\'s first smile! üì∏ This morning while we were having breakfast.',
        mediaUrl: 'https://picsum.photos/seed/smile/300/400',
        timestamp: DateTime.now().subtract(const Duration(days: 25, hours: 9)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_15',
        chatId: 'group2',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Aww! That\'s absolutely adorable! üòç Look at those little dimples!',
        timestamp: DateTime.now().subtract(const Duration(days: 25, hours: 8)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_16',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'She\'s growing up so fast! Can\'t believe she\'s already smiling. ü•∞',
        timestamp: DateTime.now().subtract(const Duration(days: 25, hours: 7)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_17',
        chatId: 'group2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'I know! Time flies when they\'re this cute! üì∑',
        timestamp: DateTime.now().subtract(const Duration(days: 25, hours: 6)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_18',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Hey everyone! Just got promoted at work! üéâ Thanks for all the support!',
        timestamp: DateTime.now().subtract(const Duration(days: 15, hours: 16)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_19',
        chatId: 'group2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Congratulations bro! So proud of you! üèÜ You worked so hard for this!',
        timestamp: DateTime.now().subtract(const Duration(days: 15, hours: 15)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_20',
        chatId: 'group2',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Amazing! Well deserved! Let\'s celebrate soon! üçæ',
        timestamp: DateTime.now().subtract(const Duration(days: 15, hours: 14)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_21',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Thanks guys! Means a lot. Maybe we can all go out for dinner this weekend?',
        timestamp: DateTime.now().subtract(const Duration(days: 15, hours: 13)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_22',
        chatId: 'group2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'I\'m in! Emma would love to see her aunt and uncle! üë®‚Äçüë©‚Äçüëß',
        timestamp: DateTime.now().subtract(const Duration(days: 15, hours: 12)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_23',
        chatId: 'group2',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Count me in too! Can\'t wait! üéä',
        timestamp: DateTime.now().subtract(const Duration(days: 15, hours: 11)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_24',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.image,
        content: 'My first day in the new office! The view is incredible. üèôÔ∏è',
        mediaUrl: 'https://picsum.photos/seed/office/400/300',
        timestamp: DateTime.now().subtract(const Duration(days: 10, hours: 18)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_25',
        chatId: 'group2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Wow! Look at you in your fancy new office! So proud of all your hard work! üíº',
        timestamp: DateTime.now().subtract(const Duration(days: 10, hours: 17)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_26',
        chatId: 'group2',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'That view is stunning! You\'ve come so far. Keep crushing it! üåü',
        timestamp: DateTime.now().subtract(const Duration(days: 10, hours: 16)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_27',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Thanks for the encouragement! The team here is amazing too.',
        timestamp: DateTime.now().subtract(const Duration(days: 10, hours: 15)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_28',
        chatId: 'group2',
        sender: _mockUsers[1],
        type: MessageType.text,
        content: 'Good morning family! Hope everyone had a great week! üåû',
        timestamp: DateTime.now().subtract(const Duration(hours: 9)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_29',
        chatId: 'group2',
        sender: _mockUsers[3],
        type: MessageType.text,
        content: 'Morning! It was good but busy. How about you?',
        timestamp: DateTime.now().subtract(const Duration(hours: 8, minutes: 45)),
        status: MessageStatus.read,
      ),
      Message(
        id: 'msg_g2_30',
        chatId: 'group2',
        sender: _mockUsers[0],
        type: MessageType.text,
        content: 'Morning! Mine was productive. Looking forward to the weekend family time! üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
        timestamp: DateTime.now().subtract(const Duration(hours: 8, minutes: 30)),
        status: MessageStatus.read,
      ),
    ],
  };

  // Mock Groups
  static final List<Group> _mockGroups = [
    Group(
      id: 'group1',
      name: 'Project Team',
      description: 'Discussion about our current project',
      members: [_mockUsers[0], _mockUsers[1], _mockUsers[2]],
      admins: [_mockUsers[0]],
      createdBy: _mockUsers[0],
      lastActivity: DateTime.now().subtract(const Duration(minutes: 10)),
      createdAt: DateTime.now().subtract(const Duration(days: 30)),
      maxMembers: 100,
    ),
    Group(
      id: 'group2',
      name: 'Family Group',
      description: 'Family conversations and updates',
      members: [_mockUsers[0], _mockUsers[1], _mockUsers[3]],
      admins: [_mockUsers[0]],
      createdBy: _mockUsers[0],
      lastActivity: DateTime.now().subtract(const Duration(hours: 2)),
      createdAt: DateTime.now().subtract(const Duration(days: 60)),
      maxMembers: 50,
      isPrivate: true,
    ),
  ];

  // Get current user (simulating logged in user)
  static User get currentUser => _mockUsers[0];

  
  // Get all users
  static List<User> get users => List.from(_mockUsers);
  
  // Get all chats
  static List<Chat> get chats => List.from(_mockChats);
  
  // Get messages for a specific chat
  static List<Message> getMessages(String chatId) {
    return _mockMessages[chatId] ?? [];
  }
  
  // Add a new message to a chat
  static void addMessage(String chatId, Message message) {
    if (_mockMessages.containsKey(chatId)) {
      _mockMessages[chatId]!.insert(0, message);
    } else {
      _mockMessages[chatId] = [message];
    }
  }
  
  // Get user by ID
  static User? getUserById(String id) {
    try {
      return _mockUsers.firstWhere((user) => user.id == id);
    } catch (e) {
      return null;
    }
  }
  
  // Get chat by ID
  static Chat? getChatById(String id) {
    try {
      return _mockChats.firstWhere((chat) => chat.id == id);
    } catch (e) {
      return null;
    }
  }

  static List<Status> get statuses => List.from(_mockStatuses);

  // Get all messages across all chats
  static List<Message> get messages {
    List<Message> allMessages = [];
    for (var chat in _mockChats) {
      allMessages.addAll(getMessages(chat.id));
    }
    return allMessages;
  }

  // Get all groups
  static List<Group> get groups => _mockGroups;
}
